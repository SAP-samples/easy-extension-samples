/*
 * This Spock specification was generated by the Gradle 'init' task.
 */
package com.sap.cx.boosters.easy.easytutorialstep5

import com.sap.cx.boosters.easy.easytutorialstep5.models.DeliverySlotManagementModel
import com.sap.cx.boosters.easy.easytutorialstep5.service.DeliverySlotService
import com.sap.cx.boosters.easy.easytutorialstep5.service.impl.DefaultDeliverySlotService
import de.hybris.bootstrap.annotations.UnitTest
import de.hybris.platform.core.model.order.CartModel
import de.hybris.platform.servicelayer.model.ModelService
import de.hybris.platform.servicelayer.search.FlexibleSearchService
import de.hybris.platform.servicelayer.search.impl.SearchResultImpl
import org.junit.Before
import org.junit.Test
import org.mockito.InjectMocks
import org.mockito.Mock

import static org.junit.Assert.assertNull
import static org.mockito.Mockito.mock
import static org.mockito.Mockito.spy
import static org.mockito.Mockito.when
import static org.mockito.MockitoAnnotations.openMocks

@UnitTest
class DeliverySlotServiceTest {

    @InjectMocks
    private DeliverySlotService deliverySlotService

    @Mock
    private FlexibleSearchService flexibleSearchService

    @Mock
    private ModelService modelService

    @Before
    void setUp() throws Exception {
        deliverySlotService = new DefaultDeliverySlotService()
        openMocks(this).close()
    }

    @Test
    void testBookedDeliverySlot() {
        def cart = mock(CartModel)
        def slot = spy(DeliverySlotManagementModel)
        def searchResult = new SearchResultImpl<DeliverySlotManagementModel>(List.of(slot), 1, -1, 0)
        when(flexibleSearchService.search(DefaultDeliverySlotService.QUERY_GET_SLOT_MANAGEMENT_BY_CART, [cart: cart])).thenReturn(searchResult)

        def result = deliverySlotService.bookDelivery("slot", cart)

        assertNull(result)
    }
}
